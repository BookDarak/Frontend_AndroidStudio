plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'


}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.cookandroid.bookdarak_1"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    viewBinding {
        enabled true
    }

    dataBinding {

        enabled  true

    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.6.21")
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation("androidx.navigation:navigation-fragment-ktx:2.4.0")
    implementation("androidx.navigation:navigation-ui-ktx:2.4.0")
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.github.sundeepk:compact-calendar-view:3.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0' // Retrofit 라이브러리
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0' // Gson 컨버터
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'androidx.room:room-compiler:2.5.2'
    implementation 'androidx.room:room-runtime:2.5.2'
    kapt "com.android.databinding:compiler:3.1.4"



    // Test
    testImplementation(Testing.junit4)
    testImplementation(Testing.textExtTruth)
    testImplementation(Testing.textRunner)
    testImplementation(Testing.roboletric)
    testImplementation(Testing.testExtJunit)
    testImplementation(Testing.testCore)
    testImplementation(Testing.coroutineTest)

    androidTestImplementation(Testing.testExtJunit)
    androidTestImplementation(Testing.espressoCore)
    androidTestImplementation(Testing.espressoContrib)
    androidTestImplementation(Testing.hamcrest)
    androidTestImplementation(Testing.testCore)
    androidTestImplementation(Testing.textExtTruth)
    androidTestImplementation(Testing.textRunner)
    androidTestImplementation(Testing.coroutineTest)
    androidTestImplementation(Testing.hiltAndroidTesting)
    kaptAndroidTest(Testing.hiltAndroidCompiler)

    // Retrofit
    implementation(Dependencies.retrofit)
    implementation(Dependencies.retrofitConverterMoshi)

    // Moshi
    implementation(Dependencies.moshi)
    kapt(Dependencies.moshiKapt)

    // Okhttp
    implementation(Dependencies.okhttp)
    implementation(Dependencies.okhttpLoggingInterceptor)

    // Lifecycle
    implementation(Dependencies.lifecycleViewmodelKtx)
    implementation(Dependencies.lifecycleRuntimeKtx)
    implementation(Dependencies.lifecycleViewmodelSavedstate)

    // Coroutine
    implementation(Dependencies.coroutinesCore)
    implementation(Dependencies.coroutinesAndroid)

    // Coil
    implementation(Dependencies.coil)

    // Recyclerview
    implementation(Dependencies.recyclerview)

    // Navigation
    implementation(Dependencies.navigationFragementKtx)
    implementation(Dependencies.navigationUiKtx)

    // Room
    implementation(Dependencies.roomRuntime)
    implementation(Dependencies.roomKtx)
    kapt(Dependencies.roomKapt)
    implementation(Dependencies.roomPaging)

    // Kotlin serialization
    implementation(Dependencies.kotlinSerialization)

    // DataStore
    implementation(Dependencies.preferencesDatastore)

    // Paging
    implementation(Dependencies.paging)

    // WorkManager
    implementation(Dependencies.workmanager)

    // Hilt
    implementation(Dependencies.daggerHilt)
    kapt(Dependencies.daggerHiltKapt)

    // ViewModel delegate
    implementation(Dependencies.activityKtx)
    implementation(Dependencies.fragmentKtx)

    // Hilt extension
    implementation(Dependencies.hiltExtensionWork)
    kapt(Dependencies.hitlExtensionKapt)



}